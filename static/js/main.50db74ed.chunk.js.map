{"version":3,"sources":["Components/Header.js","Components/ToDoItem.js","Components/ToDoList.js","Components/FooterButtons.js","Components/Footer.js","App.js","index.js"],"names":["Header","_this$props","this","props","changeInput","addItem","value","react_default","a","createElement","className","placeholder","type","onChange","onKeyDown","Component","ToDoItem","item","index","deleteItem","toggleItem","isCompleted","done","id","concat","checked","htmlFor","text","onClick","ToDoList","todolist","toggleAll","style","display","length","map","Components_ToDoItem","key","FooterButtons","filter","changeFilter","dir","_ref","selectedButton","href","Footer","clearDone","undoneListLength","Components_FooterButtons","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","target","setState","PrevState","_objectSpread","currentValue","newItem","state","lastId","keyCode","match","prevState","toConsumableArray","list","splice","oldList","completed","every","toggledList","filChange","_ref2","filteredList","Components_Header","Components_ToDoList","Components_Footer","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.50db74ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    const { changeInput, addItem, value } = this.props;\n\n    return (\n      <header className=\"header\">\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          type=\"text\"\n          onChange={changeInput}\n          onKeyDown={addItem}\n          value={value}\n        />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass ToDoItem extends Component {\n  render() {\n    const {\n      item, index, deleteItem, toggleItem,\n    } = this.props;\n    const isCompleted = item.done ? `completed` : ``;\n\n    return (\n      <li className={isCompleted}>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" id={`todo-${item.id}`} checked={item.done} onChange={() => toggleItem(item.id)} />\n          <label htmlFor={`todo-${item.id}`}>{item.text}</label>\n          <button type=\"button\" className=\"destroy\" onClick={() => deleteItem(index)} />\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default ToDoItem;\n","import React, { Component } from 'react';\nimport ToDoItem from './ToDoItem';\n\nclass ToDoList extends Component {\n  render() {\n    const {\n      todolist, deleteItem, toggleItem, toggleAll,\n    } = this.props;\n\n    return (\n      <section className=\"main\" style={{ display: `${todolist.length > 0 ? 'block' : 'none'}` }}>\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" onChange={toggleAll} />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          {todolist.map((item, index) => <ToDoItem item={item} index={index} deleteItem={deleteItem} key={item.id} toggleItem={toggleItem} />)}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default ToDoList;\n","import React, { Component } from 'react';\n\nclass FooterButtons extends Component {\n  render() {\n    const buttons = [{ dir: 'All' }, { dir: 'Active' }, { dir: 'Completed' }];\n    const { filter, changeFilter } = this.props;\n    return (\n      <ul className=\"filters\">\n        {buttons.map(({ dir }) => {\n          const isActive = filter === dir;\n          const selectedButton = isActive ? `selected` : ``;\n          return (\n            <li>\n              <a href={`#/${dir}`} className={selectedButton} onClick={() => changeFilter(dir)}>{dir}</a>\n            </li>\n          )\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default FooterButtons;\n","import React, { Component } from 'react';\nimport FooterButtons from './FooterButtons';\n\nclass Footer extends Component {\n  render() {\n    const { todolist, clearDone, filter, changeFilter } = this.props;\n    const undoneListLength = todolist.filter(item => item.done === false).length;\n\n    return (\n      <footer className=\"footer\" style={{ display: `${todolist.length > 0 ? 'block' : 'none'}` }}>\n        <span className=\"todo-count\">\n          {`${undoneListLength} items left`}\n        </span>\n\n        <FooterButtons filter={filter} changeFilter={changeFilter}/>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: `${undoneListLength < todolist.length ? 'block' : 'none'}` }}\n          onClick={clearDone}\n        >\n          Clear All Completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Components/Header';\nimport ToDoList from './Components/ToDoList';\nimport Footer from './Components/Footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todolist: [],\n      currentValue: '',\n      lastId: 0,\n      filter: 'all',\n    };\n  }\n\n  changeInput = (event) => {\n    const { value } = event.target;\n\n    this.setState(PrevState => ({\n      ...PrevState,\n      currentValue: value,\n    }));\n  };\n\n  addItem = (event) => {\n    const curVal = this.state.currentValue;\n\n    const newItem = {\n      text: curVal,\n      done: false,\n      id: this.state.lastId + 1,\n    };\n\n    if (event.keyCode !== 13) {\n      return;\n    }\n\n    if (!this.state.currentValue.match(/\\w/g)) {\n      this.setState(prevState => ({\n        ...prevState,\n        currentValue: '',\n      }));\n    } else {\n      this.setState(prevState => ({\n        ...prevState,\n        todolist: [...prevState.todolist, newItem],\n        currentValue: '',\n        lastId: newItem.id,\n      }));\n    }\n  };\n\n  deleteItem = (index) => {\n    const list = [...this.state.todolist];\n\n    list.splice(index, 1);\n    this.setState(PrevState => ({\n      ...PrevState,\n      todolist: list,\n    }));\n  };\n\n  clearDone = () => {\n    const list = [...this.state.todolist].filter(item => item.done === false);\n\n    this.setState(PrevState => ({\n      todolist: list,\n    }));\n  };\n\n  toggleItem = (id) => {\n    this.setState((PrevState) => {\n      const newTodo = PrevState.todolist.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            done: !item.done,\n          };\n        }\n\n        return item;\n      });\n\n      return ({\n        todolist: newTodo,\n      });\n    });\n  };\n\n  toggleAll = () => {\n    const oldList = [...this.state.todolist];\n\n    this.setState(({ todolist }) => {\n      const completed = oldList.every(item => item.done === true);\n      const toggledList = oldList.map(item => ({ ...item, done: true }));\n\n      if (completed) {\n        const untoggledList = oldList.map(item => ({ ...item, done: false }));\n\n        return {\n          todolist: untoggledList,\n        };\n      }\n\n      return {\n        todolist: toggledList,\n      };\n    });\n  };\n\n  changeFilter = (filChange) => {\n    this.setState(({ filter }) => ({\n      filter: filChange,\n    }));\n  };\n\n  render() {\n    let filteredList;\n\n    switch (this.state.filter) {\n      case 'All':\n        filteredList = this.state.todolist;\n        break;\n      case 'Active':\n        filteredList = this.state.todolist.filter(item => item.done === false);\n        break;\n      case 'Completed':\n        filteredList = this.state.todolist.filter(item => item.done === true);\n        break;\n      default:\n        filteredList = this.state.todolist;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <h1>todos</h1>\n        <Header\n          changeInput={this.changeInput}\n          addItem={this.addItem}\n          value={this.state.currentValue}\n        />\n        <ToDoList\n          todolist={filteredList}\n          deleteItem={this.deleteItem}\n          toggleItem={this.toggleItem}\n          toggleAll={this.toggleAll}\n        />\n\n        <Footer\n          todolist={this.state.todolist}\n          clearDone={this.clearDone}\n          filter={this.state.filter}\n          changeFilter={this.changeFilter}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}